{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea..js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","context/proyectos/proyectoReducer.js","types/index.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/token.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","serviceWorker.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useState","email","password","usuario","setUsuario","useEffect","history","push","process","msg","categoria","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","onChange","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","setProyecto","onClick","tareaContext","Proyecto","proyectoActual","obtenerTareas","_id","ListadoProyectos","proyectos","obtenerProyectos","TransitionGroup","map","CSSTransition","key","timeout","classNames","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","errortarea","tareaseleccionada","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","setTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","state","action","payload","filter","clienteAxios","axios","create","baseURL","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","Provider","children","TareaState","tareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","removeItem","cargando","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.704faf2e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nconst alertaContext = createContext();\r\n\r\nexport default alertaContext;\r\n","import { createContext } from \"react\";\r\n\r\nconst authContext = createContext();\r\n\r\nexport default authContext;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Login = (props) => {\r\n  // Extraer los valores del context\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, iniciarSesion } = authContext;\r\n\r\n  // State para iniciar sesion\r\n  const [usuario, setUsuario] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (autenticado) {\r\n      props.history.push(process.env.PUBLIC_URL + '/proyectos');\r\n    }\r\n    if (mensaje) {\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [mensaje, autenticado, props.history]);\r\n\r\n  // extraer valores del objecto usuario\r\n  const { email, password } = usuario;\r\n\r\n  const handleChange = (e) => {\r\n    setUsuario({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (email.trim() === \"\" || password.trim() === \"\") {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n    }\r\n    iniciarSesion({ email, password });\r\n  };\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Iniciar Sesión</h1>\r\n        {alerta ? (\r\n          <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n        ) : null}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Ingresa tú email\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              placeholder=\"Ingresa tú contraseña\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              value=\"Iniciar Sesión\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <Link to={\"/nueva-cuenta\"} className=\"enlace-cuenta \">\r\n          Obtener Cuenta\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AlertaContext from \"../../context/alertas/alertaContext\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst NuevaCuenta = (props) => {\r\n  // Extraer los valores del context\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { mensaje, autenticado, registrarUsuario } = authContext;\r\n\r\n  useEffect(()=>{\r\n    if(autenticado){\r\n      props.history.push('/MERNTASKS-cliente/proyectos');\r\n    }\r\n    if(mensaje){\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n    //eslint-disable-next-line\r\n  }, [mensaje, autenticado, props.history])\r\n  // State para iniciar sesion\r\n  const [usuario, setUsuario] = useState({\r\n    nombre: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmar: \"\",\r\n  });\r\n\r\n  // extraer valores del objecto usuario\r\n  const { nombre, email, password, confirmar } = usuario;\r\n\r\n  const handleChange = (e) => {\r\n    setUsuario({\r\n      ...usuario,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (\r\n      nombre.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      password.trim() === \"\" ||\r\n      confirmar.trim() === \"\"\r\n    ) {\r\n      mostrarAlerta(\"Todos los campos son obligatorios\", \"alerta-error\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      mostrarAlerta(\r\n        \"El password debe tener mínimo 6 caracteres\",\r\n        \"alerta-error\"\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (password !== confirmar) {\r\n      mostrarAlerta(\"Los passwords no son iguales\", \"alerta-error\");\r\n      return;\r\n    }\r\n\r\n    // Pasar al action \r\n    registrarUsuario({\r\n      nombre,\r\n      email,\r\n      password\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"form-usuario\">\r\n      {alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ) : null}\r\n      <div className=\"contenedor-form sombra-dark\">\r\n        <h1>Obtener una cuenta</h1>\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"nombre\">Nombre</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"nombre\"\r\n              name=\"nombre\"\r\n              value={nombre}\r\n              placeholder=\"Ingresa tú nombre\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              placeholder=\"Ingresa tú email\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              placeholder=\"Ingresa tú contraseña\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <label htmlFor=\"confirmar\">Confirmar password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"confirmar\"\r\n              name=\"confirmar\"\r\n              value={confirmar}\r\n              placeholder=\"Repite tú contraseña\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"campo-form\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-primario btn-block\"\r\n              value=\"Registrarme\"\r\n            />\r\n          </div>\r\n        </form>\r\n        <Link to={\"/\"} className=\"enlace-cuenta \">\r\n          Iniciar sesión\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NuevaCuenta;\r\n","import { createContext } from \"react\";\r\n\r\nconst proyectoContext = createContext();\r\n\r\nexport default proyectoContext;","import React, { Fragment, useState, useContext } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\n\r\nconst NuevoProyecto = () => {\r\n  // Obtener el state de formulario\r\n\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const {\r\n    formulario,\r\n    errorformulario,\r\n    mostrarFormulario,\r\n    agregarProyecto,\r\n    mostrarError,\r\n  } = proyectosContext;\r\n\r\n  // State para proyecto\r\n  const [proyecto, setProyecto] = useState({\r\n    nombre: \"\",\r\n  });\r\n\r\n  // extraer nombre del proyecto\r\n\r\n  const { nombre } = proyecto;\r\n\r\n  // al hacer submit en el form\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nombre === \"\") {\r\n      mostrarError();\r\n      return;\r\n    }  \r\n\r\n    agregarProyecto(proyecto);\r\n\r\n    // limpiar formulario\r\n    setProyecto({\r\n      nombre: \"\",\r\n    });\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-block btn-primario\"\r\n        onClick={() => mostrarFormulario()}\r\n      >\r\n        Nuevo proyecto\r\n      </button>\r\n      {formulario ? (\r\n        <form className=\"formulario-nuevo-proyecto\" onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            placeholder=\"Nombre del proyecto\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={(e) =>\r\n              setProyecto({ ...proyecto, [e.target.name]: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primario btn-block\"\r\n            value=\"Agregar proyecto\"\r\n          />\r\n        </form>\r\n      ) : null}\r\n      {errorformulario ? (\r\n        <p className=\"mensaje error\">El nombre del proyecto es obligatorio</p>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NuevoProyecto;\r\n","import { createContext } from 'react';\r\n\r\nconst tareaContext = createContext();\r\nexport default tareaContext;","import React, { useContext } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst Proyecto = ({ proyecto }) => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyectoActual } = proyectosContext;\r\n\r\n  const tareasContext = useContext(tareaContext);\r\n  const { obtenerTareas } = tareasContext;\r\n  // Funcion para agregar le proyecto actual\r\n\r\n  const seleccionarProyecto = id => {\r\n    proyectoActual(id); // fijar proyecto actual\r\n    obtenerTareas(id); // filtrar tareas cuando se de click\r\n  }\r\n\r\n  return (\r\n    <li>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-blank\"\r\n        onClick={() => seleccionarProyecto(proyecto._id)}\r\n      >\r\n        {proyecto.nombre}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Proyecto;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport Proyecto from \"./Proyecto\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport AlertaContext from '../../context/alertas/alertaContext';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst ListadoProyectos = () => {\r\n  // Extraer proyectos de state inicial\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { mensaje, proyectos, obtenerProyectos } = proyectosContext;\r\n\r\n  const alertaContext = useContext(AlertaContext);\r\n  const { alerta, mostrarAlerta } = alertaContext;\r\n  useEffect(() => {\r\n\r\n    if(mensaje){\r\n      mostrarAlerta(mensaje.msg, mensaje.categoria);\r\n    }\r\n\r\n    obtenerProyectos();\r\n    // eslint-disable-next-line\r\n  }, [mensaje]);\r\n\r\n  if (proyectos.length === 0)\r\n    return <p>No hay proyectos, comienza creando uno</p>;\r\n\r\n  return (\r\n    <ul className=\"listado-proyectos\">\r\n      { alerta ? (\r\n        <div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>\r\n      ):\r\n        null\r\n      }\r\n      <TransitionGroup>\r\n        {proyectos.map((proyecto) => (\r\n          <CSSTransition key={proyecto._id} timeout={500} classNames=\"proyecto\">\r\n            <Proyecto proyecto={proyecto} />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListadoProyectos;\r\n","import React from \"react\";\r\nimport NuevoProyecto from \"../proyectos/NuevoProyecto\";\r\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\r\n\r\nconst Sidebar = () => {\r\n  return (\r\n    <aside>\r\n      <h1>\r\n        MERN<span>Tasks</span>\r\n      </h1>\r\n      <NuevoProyecto />\r\n      <div className=\"proyectos\">\r\n        <h2>Tus proyectos</h2>\r\n        <ListadoProyectos />    \r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst Barra = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\r\n\r\n  //Obtener la informacion del usuario autenticado\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <header className=\"app-header\">\r\n      <p className=\"nombre-usuario\">\r\n        Hola <span>{usuario ? usuario.nombre : null}</span>\r\n      </p>\r\n      <nav className=\"nav-principal\">\r\n        <button\r\n          className=\"btn btn-blank cerrar-sesion\"\r\n          onClick={() => cerrarSesion()}\r\n        >\r\n          Cerrar Sesión\r\n        </button>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Barra;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\n\r\nconst FormTarea = () => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyecto } = proyectosContext;\r\n\r\n  const tareasContext = useContext(tareaContext);\r\n  const {\r\n    errortarea,\r\n    tareaseleccionada,\r\n    agregarTarea,\r\n    validarTarea,\r\n    obtenerTareas,\r\n    actualizarTarea,\r\n    limpiarTarea\r\n  } = tareasContext;\r\n\r\n  // Effect que detecta si hay una tarea seleccionada\r\n  useEffect(() => {\r\n    if (tareaseleccionada) setTarea(tareaseleccionada);\r\n  }, [tareaseleccionada]);\r\n\r\n  const [tarea, setTarea] = useState({\r\n    nombre: \"\",\r\n  });\r\n\r\n  const { nombre } = tarea;\r\n\r\n  if (!proyecto) return null;\r\n\r\n  // Array destructuring para extraer el proyecto actual equivale a proyecto[0]\r\n  const [proyectoActual] = proyecto;\r\n\r\n  const handleChange = (e) => {\r\n    setTarea({\r\n      ...tarea,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (nombre.trim() === \"\") {\r\n      validarTarea();\r\n      return;\r\n    }\r\n\r\n    // Validar si es edicion o nueva tarea\r\n    if (tareaseleccionada === null) {\r\n      // Agregar la nueva tarea la state de tareas\r\n      tarea.proyecto = proyectoActual._id;\r\n      agregarTarea(tarea);\r\n    }else{\r\n      actualizarTarea(tarea);\r\n      limpiarTarea();\r\n    }\r\n\r\n    // Obtener y filtrar las tareas de proyecto actual\r\n    obtenerTareas(proyectoActual.id);\r\n\r\n    // reiniciar form\r\n    setTarea({\r\n      nombre: '',\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"formulario\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-text\"\r\n            placeholder=\"Ingresa el nombre de la tarea...\"\r\n            name=\"nombre\"\r\n            value={nombre}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"contenedor-input\">\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-primario btn-submit btn-block\"\r\n            value={tareaseleccionada ? \"Editar tarea\" : \"Agregar tarea\"}\r\n          />\r\n        </div>\r\n      </form>\r\n      {errortarea ? (\r\n        <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormTarea;\r\n","import React, { useContext } from \"react\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\n\r\nconst Tarea = ({ tarea }) => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyecto } = proyectosContext;\r\n\r\n  // Obtener la funcion de context de tarea\r\n  const tareasContext = useContext(tareaContext);\r\n  const {\r\n    eliminarTarea,\r\n    obtenerTareas,\r\n    actualizarTarea,\r\n    guardarTareaActual,\r\n  } = tareasContext;\r\n\r\n  const [proyectoActual] = proyecto;\r\n  const tareaEliminar = id => {\r\n    eliminarTarea(id, proyectoActual._id);\r\n    obtenerTareas(proyectoActual.id);\r\n  };\r\n\r\n  // funcion que modifica el estado de las tareas\r\n  const cambiarEstado = (tarea) => {\r\n    tarea.estado = !tarea.estado;\r\n    actualizarTarea(tarea);\r\n  };\r\n\r\n  return (\r\n    <li className=\"tarea sombre\">\r\n      <p>{tarea.nombre}</p>\r\n      <div className=\"estado\">\r\n        {tarea.estado ? (\r\n          <button\r\n            type=\"button\"\r\n            className=\"completo\"\r\n            onClick={() => cambiarEstado(tarea)}\r\n          >\r\n            Completo\r\n          </button>\r\n        ) : (\r\n          <button\r\n            type=\"button\"\r\n            className=\"incompleto\"\r\n            onClick={() => cambiarEstado(tarea)}\r\n          >\r\n            Incompleto\r\n          </button>\r\n        )}\r\n      </div>\r\n      <div className=\"acciones\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primario\"\r\n          onClick={() => guardarTareaActual(tarea)}\r\n        >\r\n          Editar\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-secundario\"\r\n          onClick={()=>tareaEliminar(tarea._id)}\r\n        >\r\n          Eliminar\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Tarea;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport Tarea from \"./Tarea\";\r\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\r\nimport tareaContext from \"../../context/tareas/tareaContext\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nconst ListadoTareas = () => {\r\n  const proyectosContext = useContext(proyectoContext);\r\n  const { proyecto, eliminarProyecto } = proyectosContext;\r\n\r\n  const tareasContext = useContext(tareaContext);\r\n  const { tareasproyecto } = tareasContext;\r\n\r\n  // Si no hay proyectos seleccionados\r\n  if (!proyecto) return <h1>Selecciona un proyecto</h1>;\r\n\r\n  // Array destructuring para extraer el proyecto actual equivale a proyecto[0]\r\n  const [proyectoActual] = proyecto;\r\n\r\n  if (!proyecto) return null;\r\n  return (\r\n    <Fragment>\r\n      <h2>Proyecto: {proyectoActual.nombre}</h2>\r\n      <ul className=\"listado-tareas\">\r\n        {tareasproyecto.length === 0 ? (\r\n          <li className=\"tarea\">\r\n            <p>No hay tareas</p>\r\n          </li>\r\n        ) : (\r\n          <TransitionGroup>\r\n            {tareasproyecto.map((tarea) => (\r\n              <CSSTransition key={tarea.id} timeout={500} classNames=\"tarea\">\r\n                <Tarea  tarea={tarea} />\r\n              </CSSTransition>\r\n            ))}\r\n          </TransitionGroup>\r\n        )}\r\n      </ul>\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-eliminar\"\r\n        onClick={() => eliminarProyecto(proyectoActual._id)}\r\n      >\r\n        Eliminar proyecto &times;\r\n      </button>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListadoTareas;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport Sidebar from '../layout/Sidebar';\r\nimport Barra from '../layout/Barra';\r\nimport FormTarea from '../tareas/FormTarea.';\r\nimport ListadoTareas from '../tareas/ListadoTareas';\r\nimport AuthContext from '../../context/autenticacion/authContext';\r\n\r\nconst Proyectos = () => {\r\n    // Extraer la informacion de autenticacion\r\n    const authContext = useContext(AuthContext);\r\n    const { usuarioAutenticado } = authContext;\r\n\r\n    //Obtener la informacion del usuario autenticado\r\n    useEffect(()=>{\r\n        usuarioAutenticado()\r\n        // eslint-disable-next-line\r\n    },[]);\r\n\r\n    return ( \r\n        <div className=\"contenedor-app\">\r\n            <Sidebar/>            \r\n            <div className=\"seccion-principal\">\r\n                <Barra />\r\n                <main>\r\n                    <FormTarea />\r\n                    <div className=\"contenedor-tareas\">\r\n                        <ListadoTareas />\r\n                    </div>\r\n                </main>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Proyectos;","import {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n} from \"../../types\";\r\n\r\n// Su funcion: cambiar el state\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case FORMULARIO_PROYECTO:\r\n      return {\r\n        ...state,\r\n        formulario: state.formulario ? false : true,\r\n      };\r\n    case OBTENER_PROYECTOS:\r\n      return {\r\n        ...state,\r\n        proyectos: action.payload,\r\n      };\r\n    case AGREGAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: [...state.proyectos, action.payload],\r\n        formulario: false,\r\n        errorformulario: false,\r\n      };\r\n    case VALIDAR_FORMULARIO:\r\n      return {\r\n        ...state,\r\n        errorformulario: true,\r\n      };\r\n    case PROYECTO_ACTUAL:\r\n      return {\r\n        ...state,\r\n        proyecto: state.proyectos.filter(\r\n          (proyecto) => proyecto._id === action.payload\r\n        ),\r\n      };\r\n    case ELIMINAR_PROYECTO:\r\n      return {\r\n        ...state,\r\n        proyectos: state.proyectos.filter(\r\n          (proyecto) => proyecto._id !== action.payload\r\n        ), proyecto : null\r\n      }\r\n    case PROYECTO_ERROR:\r\n      return {\r\n        ...state,\r\n        mensaje: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\r\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\r\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\r\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\r\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\r\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\r\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\r\n\r\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\r\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\r\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\r\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\r\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\r\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\r\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\r\n\r\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\r\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\r\n\r\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\r\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\r\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\r\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const CERRAR_SESION = 'CERRAR_SESION';","import axios from 'axios';\r\n\r\nconst clienteAxios = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n});\r\n\r\nexport default clienteAxios;\r\n","import React, { useReducer } from \"react\";\r\nimport proyectoContext from \"./proyectoContext\";\r\nimport proyectoReducer from \"./proyectoReducer\";\r\n\r\nimport {\r\n  FORMULARIO_PROYECTO,\r\n  OBTENER_PROYECTOS,\r\n  AGREGAR_PROYECTO,\r\n  VALIDAR_FORMULARIO,\r\n  PROYECTO_ACTUAL,\r\n  ELIMINAR_PROYECTO,\r\n  PROYECTO_ERROR,\r\n} from \"../../types\";\r\n\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nconst ProyectoState = (props) => {\r\n\r\n  const initialState = {\r\n    proyectos: [],\r\n    formulario: false,\r\n    errorformulario: false,\r\n    proyecto: null,\r\n    mensaje: null\r\n  };\r\n\r\n  // Dispatch para ejecutar las acciones\r\n  const [state, dispatch] = useReducer(proyectoReducer, initialState);\r\n\r\n  // Serie de funciones para el CRUD\r\n  const mostrarFormulario = () => {\r\n    dispatch({\r\n      type: FORMULARIO_PROYECTO,\r\n    });\r\n  };\r\n\r\n  // Obtener los proyectos\r\n\r\n  const obtenerProyectos = async () => {\r\n    try {\r\n      const resultado = await clienteAxios.get('/api/proyectos');\r\n\r\n      dispatch({\r\n        type: OBTENER_PROYECTOS,\r\n        payload: resultado.data.proyectos\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n      dispatch({\r\n        type:PROYECTO_ERROR,\r\n        payload: alerta\r\n      })\r\n      \r\n    }\r\n  };\r\n\r\n  // Agregar un nuevo proyecto\r\n\r\n  const agregarProyecto = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/api/proyectos\", proyecto);\r\n      console.log(resultado);\r\n\r\n      dispatch({\r\n        type: AGREGAR_PROYECTO,\r\n        payload: resultado.data.proyecto,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n      dispatch({\r\n        type:PROYECTO_ERROR,\r\n        payload: alerta\r\n      })\r\n    }\r\n  };\r\n\r\n  // Valida el formulario por errores\r\n  const mostrarError = () => {\r\n    dispatch({\r\n      type: VALIDAR_FORMULARIO,\r\n    });\r\n  };\r\n\r\n  // Selecciona el proyecto que el usuario dio click\r\n\r\n  const proyectoActual = (proyectoId) => {\r\n    dispatch({\r\n      type: PROYECTO_ACTUAL,\r\n      payload: proyectoId,\r\n    });\r\n  };\r\n\r\n  // Elimina un proyecto\r\n  const eliminarProyecto = async (proyectoId) => {\r\n    try {\r\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\r\n      dispatch({\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoId,\r\n      });\r\n      dispatch({\r\n        type: ELIMINAR_PROYECTO,\r\n        payload: proyectoId,\r\n      });\r\n    } catch (error) {\r\n      const alerta = {\r\n        msg: 'Hubo un error',\r\n        categoria: 'alerta-error'\r\n      }\r\n      dispatch({\r\n        type:PROYECTO_ERROR,\r\n        payload: alerta\r\n      })\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n    <proyectoContext.Provider\r\n      value={{\r\n        proyectos: state.proyectos,\r\n        formulario: state.formulario,\r\n        errorformulario: state.errorformulario,\r\n        proyecto: state.proyecto,\r\n        mensaje: state.mensaje,\r\n        mostrarFormulario,\r\n        obtenerProyectos,\r\n        agregarProyecto,\r\n        mostrarError,\r\n        proyectoActual,\r\n        eliminarProyecto,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </proyectoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ProyectoState;\r\n","import {\r\n  TAREAS_PROYECTO,\r\n  AGREGAR_TAREA,\r\n  VALIDAR_TAREA,\r\n  ELIMINAR_TAREA,\r\n  TAREA_ACTUAL,\r\n  ACTUALIZAR_TAREA,\r\n  LIMPIAR_TAREA,\r\n} from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case TAREAS_PROYECTO:\r\n      return {\r\n        ...state,\r\n        tareasproyecto: action.payload\r\n      };\r\n    case AGREGAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasproyecto: [action.payload, ...state.tareasproyecto],\r\n        errortarea: false,\r\n      };\r\n    case VALIDAR_TAREA:\r\n      return {\r\n        ...state,\r\n        errortarea: true,\r\n      };\r\n    case ELIMINAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasproyecto: state.tareasproyecto.filter((tarea) => tarea._id !== action.payload),\r\n      };\r\n    case ACTUALIZAR_TAREA:\r\n      return {\r\n        ...state,\r\n        tareasproyecto: state.tareasproyecto.map(tarea =>\r\n          tarea._id === action.payload._id ? action.payload : tarea\r\n        ),\r\n      };\r\n    case TAREA_ACTUAL:\r\n      return{\r\n        ...state,\r\n        tareaseleccionada: action.payload\r\n      }\r\n    case LIMPIAR_TAREA:\r\n      return{\r\n        ...state,\r\n        tareaseleccionada: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport tareaContext from \"./tareaContext\";\r\nimport tareaReducer from \"./tareaReducer\";\r\nimport clienteAxios from \"../../config/axios\";\r\n\r\nimport {\r\n  TAREAS_PROYECTO,\r\n  AGREGAR_TAREA,\r\n  VALIDAR_TAREA,\r\n  ELIMINAR_TAREA,\r\n  TAREA_ACTUAL,\r\n  ACTUALIZAR_TAREA,\r\n  LIMPIAR_TAREA,\r\n} from \"../../types\";\r\n\r\nconst TareaState = (props) => {\r\n  const initialState = {\r\n    tareasproyecto: [],\r\n    errortarea: false,\r\n    tareaseleccionada: null,\r\n  };\r\n\r\n  // Crear dispatch y state\r\n  const [state, dispatch] = useReducer(tareaReducer, initialState);\r\n\r\n  // obtener las tareas de un proyecto en especifico\r\n\r\n  const obtenerTareas = async (proyecto) => {\r\n    try {\r\n      const resultado = await clienteAxios.get(\"/api/tareas\", {\r\n        params: { proyecto },\r\n      });\r\n\r\n      dispatch({\r\n        type: TAREAS_PROYECTO,\r\n        payload: resultado.data.tareas,\r\n      });\r\n    } catch (error) {\r\n      console.log();\r\n    }\r\n  };\r\n\r\n  // Eliminar tarea por id\r\n  const eliminarTarea = async (id, proyecto) => {\r\n    try {\r\n      await clienteAxios.delete(`/api/tareas/${id}`, { params: { proyecto } });\r\n      dispatch({\r\n        type: ELIMINAR_TAREA,\r\n        payload: id,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Agregar un tarea al proyecto seleccionado\r\n  const agregarTarea = async (tarea) => {\r\n    try {\r\n      const resultado = await clienteAxios.post(\"/api/tareas\", tarea);\r\n\r\n      dispatch({\r\n        type: AGREGAR_TAREA,\r\n        payload: resultado.data.tarea,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const validarTarea = () => {\r\n    dispatch({\r\n      type: VALIDAR_TAREA,\r\n    });\r\n  };\r\n\r\n  // Cambia el estado de cada tarea (completo, incompleto)\r\n  const actualizarTarea = async (tarea) => {\r\n    try {\r\n\r\n      const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\r\n\r\n      dispatch({\r\n        type: ACTUALIZAR_TAREA,\r\n        payload: resultado.data.tarea,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      \r\n    }\r\n  };\r\n\r\n  // Extrae una tarea para edicion\r\n  const guardarTareaActual = (tarea) => {\r\n    dispatch({\r\n      type: TAREA_ACTUAL,\r\n      payload: tarea,\r\n    });\r\n  };\r\n\r\n  // Elimina la tareaseleccionada\r\n  const limpiarTarea = () => {\r\n    dispatch({\r\n      type: LIMPIAR_TAREA,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <tareaContext.Provider\r\n      value={{\r\n        tareasproyecto: state.tareasproyecto,\r\n        errortarea: state.errortarea,\r\n        tareaseleccionada: state.tareaseleccionada,\r\n        obtenerTareas,\r\n        agregarTarea,\r\n        validarTarea,\r\n        eliminarTarea,\r\n        guardarTareaActual,\r\n        actualizarTarea,\r\n        limpiarTarea,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </tareaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TareaState;\r\n","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n  switch ((action.type)) {\r\n    case MOSTRAR_ALERTA:\r\n      return {\r\n        alerta: action.payload,\r\n      };\r\n    case OCULTAR_ALERTA:\r\n      return {\r\n        alerta: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport alertaContext from \"./alertaContext\";\r\nimport alertaReducer from \"./alertaReducer\";\r\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from \"../../types\";\r\n\r\nconst AlertaState = (props) => {\r\n  const initialState = {\r\n    alerta: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(alertaReducer, initialState);\r\n\r\n  // Funciones\r\n  const mostrarAlerta = (msg, categoria) => {\r\n    dispatch({\r\n      type: MOSTRAR_ALERTA,\r\n      payload: {\r\n        msg,\r\n        categoria,\r\n      },\r\n    });\r\n    // Despues de 5 segundos limpia el error\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: OCULTAR_ALERTA,\r\n      });\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <alertaContext.Provider\r\n      value={{\r\n        alerta: state.alerta,\r\n        mostrarAlerta,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </alertaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertaState;\r\n","import {\r\n  REGISTRO_EXITOSO,\r\n  REGISTRO_ERROR,\r\n  OBTENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  LOGIN_ERROR,\r\n  CERRAR_SESION,\r\n} from \"../../types\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case REGISTRO_EXITOSO:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        autenticado: true,\r\n        mensaje: null,\r\n      };\r\n    case CERRAR_SESION:\r\n    case REGISTRO_ERROR:\r\n    case LOGIN_ERROR:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        usuario: null,\r\n        autenticado: null,\r\n        mensaje: action.payload,\r\n        cargando: false,\r\n      };\r\n    case OBTENER_USUARIO:\r\n      return {\r\n        ...state,\r\n        autenticado: true,\r\n        usuario: action.payload,\r\n        cargando: false,\r\n      };\r\n    case LOGIN_EXITOSO:\r\n      localStorage.setItem(\"token\", action.payload.token);\r\n      return {\r\n        ...state,\r\n        autenticado: true,\r\n        mensaje: null,\r\n        cargando: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import clienteAxios from \"./axios\";\r\n\r\nconst tokenAuth = (token) => {\r\n  if (token) {\r\n    clienteAxios.defaults.headers.common[\"x-auth-token\"] = token;\r\n  } else {\r\n    delete clienteAxios.defaults.headers.common[\"x-auth-token\"];\r\n  }\r\n};\r\n\r\nexport default tokenAuth;","import React, { useReducer } from \"react\";\r\nimport AuthReducer from \"./authReducer\";\r\nimport AuthContext from \"./authContext\";\r\nimport {\r\n  REGISTRO_ERROR,\r\n  REGISTRO_EXITOSO,\r\n  LOGIN_ERROR,\r\n  OBTENER_USUARIO,\r\n  LOGIN_EXITOSO,\r\n  CERRAR_SESION,\r\n} from \"../../types\";\r\nimport clienteAxios from \"../../config/axios\";\r\nimport tokenAuth from \"../../config/token\";\r\nconst AuthState = (props) => {\r\n  const initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    autenticado: null,\r\n    usuario: null,\r\n    mensaje: null,\r\n    cargando: true,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  // Funciones\r\n  const registrarUsuario = async (datos) => {\r\n    try {\r\n      const respuesta = await clienteAxios.post(\"/api/usuarios\", datos);\r\n\r\n      dispatch({\r\n        type: REGISTRO_EXITOSO,\r\n        payload: respuesta.data,\r\n      });\r\n\r\n      // Obtener los datos del usuario autenticado\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      //console.log(error.response);\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n\r\n      dispatch({\r\n        type: REGISTRO_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Retorna el usuario autenticado\r\n  const usuarioAutenticado = async () => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      tokenAuth(token);\r\n    }\r\n    try {\r\n      const respuesta = await clienteAxios.get(\"/api/auth\");\r\n      //console.log(respuesta);\r\n      dispatch({\r\n        type: OBTENER_USUARIO,\r\n        payload: respuesta.data.usuario,\r\n      });\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n      });\r\n    }\r\n  };\r\n\r\n  // Iniciar sesion\r\n  const iniciarSesion = async (datos) => {\r\n    try {\r\n      const respuesta = await clienteAxios.post(\"/api/auth\", datos);\r\n\r\n      dispatch({\r\n        type: LOGIN_EXITOSO,\r\n        payload: respuesta.data,\r\n      });\r\n      // Obtener usuario\r\n      usuarioAutenticado();\r\n    } catch (error) {\r\n      console.log(error.response);\r\n      const alerta = {\r\n        msg: error.response.data.msg,\r\n        categoria: \"alerta-error\",\r\n      };\r\n\r\n      dispatch({\r\n        type: LOGIN_ERROR,\r\n        payload: alerta,\r\n      });\r\n    }\r\n  };\r\n\r\n  const cerrarSesion = () => {\r\n    dispatch({\r\n      type: CERRAR_SESION,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        token: state.token,\r\n        autenticado: state.autenticado,\r\n        usuario: state.usuario,\r\n        mensaje: state.mensaje,\r\n        cargando: state.cargando,\r\n        registrarUsuario,\r\n        iniciarSesion,\r\n        usuarioAutenticado,\r\n        cerrarSesion,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthContext from \"../../context/autenticacion/authContext\";\r\n\r\nconst RutaPrivada = ({ component: Component, ...props }) => {\r\n\r\n  const authContext = useContext(AuthContext);\r\n  const { autenticado, cargando, usuarioAutenticado } = authContext;\r\n\r\n  useEffect(() => {\r\n    usuarioAutenticado();\r\n    //eslint-disable-next-line\r\n  }, []);\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        !autenticado && !cargando ? (\r\n          <Redirect to={process.env.PUBLIC_URL + '/MERNTASKS-cliente/'} />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default RutaPrivada;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/auth/Login\";\nimport NuevaCuenta from \"./components/auth/NuevaCuenta\";\nimport Proyectos from \"./components/proyectos/Proyectos\";\nimport ProyectoState from \"./context/proyectos/proyectoState\";\nimport TareaState from \"./context/tareas/tareaState\";\nimport AlertaState from \"./context/alertas/alertaState\";\nimport AuthState from \"./context/autenticacion/authState\";\nimport tokenAuth from \"./config/token\";\nimport RutaPrivada from \"./components/rutas/RutaPrivada\";\n\n// Revisar si hay un token\nconst token = localStorage.getItem(\"token\");\n\nif (token) {\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path={process.env.PUBLIC_URL + '/'} component={Login} />\n                <Route exact path={process.env.PUBLIC_URL + '/nueva-cuenta'} component={NuevaCuenta} />\n                <RutaPrivada exact path={process.env.PUBLIC_URL + '/proyectos'} component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}